name: Continuous Integration and Delivery

on: 
  push:
    branches:
      - main
    paths:
      - "projects/**"

env:
  IMAGE: docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/tutor-backend
  GCP_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend:latest

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2.3.4
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true
      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./project/Dockerfile.prod \
            "./project"
      - name: Push image
        run: |
          docker push ${{ env.IMAGE }}:latest

  test:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout master
        uses: actions/checkout@v2.3.4
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true
      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./project/Dockerfile.prod \
            "./project"
      - name: Run container
        run: |
          docker run \
            -d \
            --name tutorapp-backend \
            -e PORT=8765 \
            -e ENVIRONMENT=dev \
            -e DATABASE_TEST_URL=sqlite://sqlite.db \
            -p 5003:8765 \
            ${{ env.IMAGE }}:latest
#      - name: Migrations
#        run: docker exec tutorapp-backend python app/db.py
#      - name: Pytest
#        run: docker exec tutorapp-backend python -m pytest --import-mode=importlib
#      - name: Flake8
        run: docker exec tutorapp-backend python -m flake8 .
      - name: Black
        run: docker exec tutorapp-backend python -m black . --check
      - name: isort
        run: docker exec tutorapp-backend python -m isort . --check-only

  deploy:
    name: Cloud Run Deploy
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout main
        uses: actions/checkout@v2.3.4
      - name: Setup GCP Service Account
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Configure Docker
        run: |
          gcloud auth configure-docker
      - name: Build
        run: |
          docker build \
           --cache-from ${{ env.IMAGE }}:latest \
           --tag ${{ env.GCP_IMAGE }} \
           --file ./project/Dockerfile.prod \
           "./project"
      - name: Push
        run: |
          docker push ${{ env.GCP_IMAGE }}
      - name: Deploy
        run: |
          gcloud run deploy tutorapp \
          --region us-central1 \
          --image ${{ env.GCP_IMAGE }} \
          --platform managed \
          --allow-unauthenticated \
          --project ${{ secrets.GCP_PROJECT_ID }}
